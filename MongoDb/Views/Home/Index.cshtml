@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form class="form-inline" onsubmit="return false;" id="serachForm">
    <div class="form-group">
        <div class="input-group">
            <div class="input-group-addon">名字</div>
            <input type="text" class="form-control" id="name" name="name" placeholder="name">
        </div>
    </div>
    <button class="btn btn-primary" onclick="add()"><i class="glyphicon glyphicon-plus" aria-hidden="true"></i>添加</button>
    <button class="btn btn-primary" id="searchBtn"><i class="glyphicon glyphicon-search" aria-hidden="true"></i>搜索</button>
</form>
<table id="tbList"></table>
<script type="text/javascript">


    $(function () {
        var oTable = new TableInit();
        oTable.Init();
        $('#searchBtn').click(function () {
            oTable.refresh();
        });
    })
    var TableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $('#tbList').bootstrapTable({
                url: '/Home/Get?' + Math.random(),     //请求后台的URL（*）
                method: 'get',                         //请求方式（*）
                toolbar: '#serachForm',                //工具按钮用哪个容器
                striped: true,                         //是否显示行间隔色
                cache: false,                          //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                     //是否显示分页（*）
                paginationLoop: false,                 //分页按钮无限循环
                ajaxOptions: { traditional: true },
                sortable: true,                       //是否启用排序
                //sortName: "TradeDateTime",
                sortOrder: "Desc",                   //排序方式
                //sortStable: true,                  //设置为 true 将获得稳定的排序，我们会添加_position属性到 row 数据中。
                queryParams: oTableInit.queryParams,   //传递参数（*）
                queryParamsType: 'limit',
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 15, 20, 50, 100],        //可供选择的每页的行数（*）
                search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                uniqueId: "id",                     //每一行的唯一标识，一般为主键列
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表
                columns: [
                    {
                        checkbox: true
                    },
                    {
                        field: 'name',
                        title: '名字',
                        align: 'center',
                        valign: 'middle',
                    },
                    {
                        field: 'age',
                        title: '年龄',
                        align: 'center',
                        valign: 'middle',
                    },
                    {
                        field: 'addTime',
                        title: '创建时间',
                        align: 'center',
                        valign: 'middle',
                    },
                    {
                        field: 'modifyTime',
                        title: '修改时间',
                        align: 'center',
                        valign: 'middle',
                        formatter: dataFormatter
                    }, {
                        field: 'id',
                        title: '操作',
                        width: 120,
                        align: 'center',
                        valign: 'middle',
                        formatter: actionFormatter
                    }
                ],
                onLoadSuccess: function () {
                },
                onLoadError: function () {
                    showTips("数据加载失败！");
                },
                onDblClickRow: function (row, $element) { // 双击行显示
                    EditViewById(row.id);
                },
            });
        };
        oTableInit.refresh = function () {
            $('#tbList').bootstrapTable('refresh');
        }
        oTableInit.getSelections = function () {
            return $('#tbList').bootstrapTable('getSelections')[0].Id;
        }
        oTableInit.getAllSelections = function () {
            var array = $('#tbList').bootstrapTable('getAllSelections');
            var result = [];
            for (var i = 0; i < array.length; i++) {
                result.push(array[i].id);
            }
            return result;
        }
        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                pageSize: params.limit,   //页面大小
                pageIndex: params.pageNumber,  //页码
                orderColumn: params.sort,
                orderPattern: params.order,
            };

            temp = $.extend(temp, $("#serachForm").serializeObject());
            return temp;
        };
        return oTableInit;
    };
    //操作栏的格式化
    function actionFormatter(value, row, index) {
        var id = value;
        var result = "";
        result += "<a href='javascript:;' class='btn btn-xs green' onclick=\"EditViewById('" + id + "', view='view')\" title='查看'><span class='glyphicon glyphicon-search'></span></a>";
        result += "<a href='javascript:;' class='btn btn-xs blue' onclick=\"EditViewById('" + id + "')\" title='编辑'><span class='glyphicon glyphicon-pencil'></span></a>";
        result += "<a href='javascript:;' class='btn btn-xs red' onclick=\"DeleteById('" + id + "')\" title='删除'><span class='glyphicon glyphicon-remove'></span></a>";
        return result;
    }

    function EditViewById(id) {
        window.location.href = '/home/Privacy?id=' + id + '';
    }

    function add() {
        window.location.href = '/home/Privacy?id=';
    }

    function DeleteById(id) {
        var con = confirm("确定删除吗?"); //在页面上弹出对话框
        if (con == true) {
            $.ajax({
                url: '/home/delete',
                type: 'delete',
                data: { id: id },
                success: function (res) {
                    window.location.reload()
                }
            });
        }
    }

    //Email字段格式化
    function dataFormatter(value, row, index) {
        if (value == null || value == '' || value == undefined) {
            return '';
        }
        return value;
    }
</script>